name: Node.js CI

on:
  push:
    branches: [main, alpha, beta, next]

jobs:
  # quality:

  #   runs-on: ${{ matrix.os }}

  #   strategy:
  #     matrix:
  #       # node-version: [10.x, 12.x, 14.x, 15.x, 16.x, 17.x]
  #       node-version: [16.x]
  #       # os: [ubuntu-latest, windows-latest]
  #       os: [ubuntu-latest]
  #       # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Use Node.js ${{ matrix.node-version }}
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: ${{ matrix.node-version }}
  #     - uses: pnpm/action-setup@v2
  #       with:
  #         version: 8
  #         run_install: |
  #           - recursive: true
  #             args: [--frozen-lockfile, --strict-peer-dependencies]
  #           - args: [--global, gulp, prettier, typescript]
  #     # - run: yarn test

  publish:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - name: checkout code repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: install pnpm
        run: npm i pnpm@latest -g

      - name: Setup npmrc
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc

      - name: setup pnpm config
        run: pnpm config set store-dir $PNPM_CACHE_FOLDER

      - name: install dependencies
        run: pnpm install

      - name: install changesets
        id: changesets
        uses: changesets/action@v1
        with:
          version: pnpm changeset version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # - name: create and publish versions
      #   uses: changesets/action@v1
      #   # with:
      #     # version: pnpm changeset pre enter ${{ github.ref_name }} && pnpm -w packing steps.changesets.outputs.version && pnpm build && pnpm pack
      #     # publish: pnpm ci:publish
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publishing
        if: steps.changesets.outputs.hasChangesets == 'false'
        # You can do something when a publish should happen.
        run: |
          pnpm changeset pre enter ${{ github.ref_name }}
          pnpm changeset version
          pnpm --filter "./packages/**" build
          pnpm changeset version
          pnpm changeset publish
